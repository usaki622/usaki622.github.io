<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/11/23/%E3%80%90Vue%E3%80%9102-%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E4%B8%8E%E7%9B%91%E5%90%AC%E5%99%A8/"/>
      <url>/2023/11/23/%E3%80%90Vue%E3%80%9102-%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E4%B8%8E%E7%9B%91%E5%90%AC%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、指令补充">一、指令补充</h2><h3 id="1-指令修饰符">1.指令修饰符</h3><p><font color=1E90FF>我们先介绍一下指令修饰符吧！</font></p><p><font color=#00C957>在Vue.js中，指令修饰符（Directive Modifiers）是一种用于在指令后面添加特殊后缀的语法，以改变指令的行为。指令修饰符通常以点号<code>.</code>开头，放置在指令后面，用于对指令进行额外的操作或配置。</font></p><p>其一大作用就是封装了不同的处理操作，从而简化代码。</p><p><font color=#FF9911>下面就介绍几个比较常见的。看一下PPT上列出的。</font></p><img src="https://s2.loli.net/2023/11/23/pstfPgYncbT1FIV.png" style="zoom: 33%;" ><p>我们以@keyup.enter为例，这个是当点击enter键的时候才触发的。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>@keyup.enter  →  监听键盘回车事件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;fn&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        fn (e) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// if (e.key === &#x27;Enter&#x27;) &#123;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">//   console.log(&#x27;键盘回车的时候触发&#x27;, this.username)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;键盘回车的时候触发&#x27;</span>, <span class="variable language_">this</span>.<span class="property">username</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>这段代码是一个使用Vue.js的简单示例，演示了如何使用<code>@keyup.enter</code>监听键盘回车事件，并将事件绑定到Vue实例的一个方法中。在输入框中输入内容，按下回车键时，<code>fn</code>方法会被调用，打印出当前<code>username</code>的值。</font></p><p><font color=#DA70D6>需要指出的是，这个等效于注释中的代码，只是注释中的代码演示了在普通JavaScript环境中如何通过事件对象判断按下的键是否为回车键。这也说明了指令修饰符如何进行简化。</font></p><p>后面再一段代码演示一下PPT中剩下几种修饰符。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>v-model修饰符 .trim .number<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    姓名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.trim</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    年纪：<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model.number</span>=<span class="string">&quot;age&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>@事件名.stop     →  阻止冒泡<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;fatherFn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click.stop</span>=<span class="string">&quot;sonFn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span>儿子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>@事件名.prevent  →  阻止默认行为<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.prevent</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span>&gt;</span>阻止默认行为<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">age</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        fatherFn () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&#x27;老父亲被点击了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        sonFn (e) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// e.stopPropagation()</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">alert</span>(<span class="string">&#x27;儿子被点击了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>最上面两个不用多解释。.trim就是单纯去空格，.number则是因为通常表单元素（例如 <code>&lt;input&gt;</code> 或 <code>&lt;select&gt;</code>）的值是字符串类型，用这个就可以转化为number类型。</font></p><p><font color=#DB7093>后面的.stop则是阻止冒泡的。这里两个盒子，如果有冒泡就是sonFn和fatherFn方法都会被调用，用了.stop就不会了。这个等效于sonFn方法中的注释。</font></p><p><font color=#DB7093>最后那个.prevent就是阻止了a标签默认的跳转行为了。</font></p><h3 id="2-v-bind增强样式">2.v-bind增强样式</h3><p>我们先回顾一下，v-bind是属性绑定指令，可以动态绑定html的标签属性。</p><p><font color=1E90FF>而为了方便开发者进行样式控制， Vue 扩展了 v-bind 的语法，可以针对 class 类名 和 style 行内样式 进行控制 。让我们来进行学习！</font></p><p><font color=#FF9911>我们首先来看操作class类名。</font></p><img src="https://s2.loli.net/2023/11/24/uTmNHeRbSt4KWni.png" style="zoom: 33%;" ><p>我们以一个案例为例子，就是图里这个京东秒杀tab栏，鼠标点击哪里哪里就会高亮。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;activeIndex = index&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; active: index === activeIndex &#125;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">activeIndex</span>: <span class="number">2</span>, <span class="comment">// 记录高亮</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;京东秒杀&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;每日特价&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;品类秒杀&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>最上面的<code>v-for</code>就是列表渲染出list里三个东西，下面的<code>:class</code>就是<code>v-bind:class</code>的缩写，当 <code>index</code> 等于 <code>activeIndex</code> 时，将应用 <code>active</code> 类，从而实现高亮效果。<code>@click</code>方法则可以将高亮索引activeIndex设置为当前点击项的索引。</font></p><p><font color=#FF9911>然后我们再来看看v-bind控制 style 行内样式。</font></p><p>语法也和上面类似：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; CSS属性名1: CSS属性值, CSS属性名2: CSS属性值 &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们也是以一个案例为例子。如图，点击不同按钮，进度条就会呈现不同状态。</p><img src="https://s2.loli.net/2023/11/24/J3ATe6PtNW85sDy.png" style="zoom:50%;" ><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 外层盒子底色 （黑色） --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;progress&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 内层盒子 - 进度（蓝色） --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; width: percent + &#x27;%&#x27; &#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; percent &#125;&#125;%<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 25&quot;</span>&gt;</span>设置25%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 50&quot;</span>&gt;</span>设置50%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 75&quot;</span>&gt;</span>设置75%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;percent = 100&quot;</span>&gt;</span>设置100%<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">percent</span>: <span class="number">30</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li></li></ol><h2 id="二、computed计算属性">二、computed计算属性</h2><h3 id="1-什么是计算属性？">1.什么是计算属性？</h3><p><font color=#00C957>在 Vue.js 中，<code>computed</code> 是一种特殊的属性类型，用于定义一个计算属性。计算属性是基于响应式依赖进行缓存的属性，它的值是根据其他属性计算而来的，并且只有在相关依赖发生变化时才会重新计算。</font></p><p><font color=#FF9911>其语法是：</font></p><ol><li>声明在 <strong>computed 配置项</strong>中，一个计算属性对应一个函数</li><li>使用起来和普通属性一样使用  </li></ol><p>这样说可能有点抽象，让我们看看下面的具体业务。</p><img src="https://s2.loli.net/2023/11/24/9rUz1HFNaLfh8Ox.png"><p>下面的礼物总数直接依赖于上面的num属性，当num属性发生变化时也会一起重新计算。</p><p>具体的代码如下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.num &#125;&#125;个<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 目标：统计求和，求得礼物总数 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>礼物总数：&#123;&#123; totalCount &#125;&#125; 个<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 现有的数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;篮球&#x27;</span>, <span class="attr">num</span>: <span class="number">1</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;玩具&#x27;</span>, <span class="attr">num</span>: <span class="number">2</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;铅笔&#x27;</span>, <span class="attr">num</span>: <span class="number">5</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        totalCount () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 基于现有的数据，编写求值逻辑</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 计算属性函数内部，可以直接通过 this 访问到 app 实例</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(this.list)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 需求：对 this.list 数组里面的 num 进行求和 → reduce</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">let</span> total = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item.<span class="property">num</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">return</span> total</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>注意：计算属性本质上是属性，所以不要加括号。</font></p><blockquote><p>在 Vue.js 中，<code>computed</code> 属性是一种特殊的属性，用于声明计算属性。计算属性不需要像方法一样调用，而是会根据它所依赖的数据自动计算值，并且在模板中可以像普通属性一样使用。因此，在模板中访问计算属性时，不需要加括号。</p></blockquote><p><font color=#DA70D6>几个注意点：</font></p><ol><li>computed配置项和data配置项是 <strong>同级</strong> 的</li><li>computed中的计算属性 <strong>虽然是函数的写法</strong> ，但他<strong>依然是个属性</strong></li><li>computed中的计算属性 <strong>不能</strong> 和data中的属性 <strong>同名</strong></li><li>使用computed中的计算属性和使用data中的属性是一样的用法</li><li>computed中计算属性内部的 <strong>this</strong> 依然 <strong>指向的是Vue实例</strong></li></ol><p><strong>PS：</strong></p><p><font color=#DA70D6><em>这个例子比较简单所以可能看不出和直接用</em></font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>总数：&#123;&#123; list.reduce((sum, item) =&gt; sum + item.num, 0) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DA70D6><em>的区别。</em></font></p><p>让我们看看chatgpt是怎么解读的。</p><blockquote><p>在给定的简单例子中，实际上在性能和功能上并没有太大区别。计算属性主要在处理更复杂、耗时的计算逻辑时发挥作用，以及提高代码的可读性。在这个特定的例子中，区别相对较小。</p><p><strong>使用 <code>computed</code> 计算属性的优势：</strong></p><ol><li><strong>缓存：</strong> 计算属性会进行缓存，只有依赖的属性发生变化时才会重新计算，避免了不必要的重复计算，提高性能。</li><li><strong>响应式：</strong> 计算属性是响应式的，当依赖的属性发生变化时，相关的计算属性会自动更新。</li><li><strong>简化模板：</strong> 在模板中使用计算属性时，可以直接像访问普通属性一样使用，不需要显式调用函数，提高代码的可读性。</li></ol><p><strong>不使用 <code>computed</code> 的劣势：</strong></p><ol><li><strong>性能影响：</strong> 如果在模板中使用复杂的逻辑来计算属性，而不是使用 <code>computed</code>，可能会导致模板的渲染性能下降，因为每次渲染都会重新执行相应的逻辑。</li><li><strong>可读性下降：</strong> 在模板中直接写复杂的逻辑会使模板变得冗长和难以理解，降低了代码的可读性和维护性。</li></ol><p>对于小规模的应用，这两种方式之间的差异可能不太明显。</p><p>对于大规模的应用，使用计算属性有助于更好地组织代码，提高可读性和可维护性。</p></blockquote><h3 id="2-computed-计算属性-vs-methods-方法">2.computed 计算属性 vs methods 方法</h3><p><font color=1E90FF>初学者很容易将computed 计算属性和methods 方法搞混，不清楚什么时候该用哪个。下面就来详细介绍一下！</font></p><p><font color=#DA70D6><em>生草，这节就是前面PS里我的疑问，这节就讲了.jpg</em></font></p><img src="https://s2.loli.net/2023/11/24/GoEvXMYZ3y5CmPp.png"><p>请看PPT，这里除了语法上略微的不同，最主要的区别就在于这个 **缓存特性 **。</p><p>我们用实际代码来演示一下。</p><p><font color=#FF9911>来看这个盒子。</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCount &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCount &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCount &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCount &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.num &#125;&#125;个<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>礼物总数：&#123;&#123; totalCount &#125;&#125; 个<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#FF9911>如果我们用的是计算属性的话（注意，用计算属性的话上面就不需要加括号了）：</font></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="comment">// 计算属性：有缓存的，一旦计算出来结果，就会立刻缓存</span></span><br><span class="line">    <span class="comment">// 下一次读取 → 直接读缓存就行 → 性能特别高</span></span><br><span class="line">    totalCount () &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;计算属性执行了&#x27;</span>)</span><br><span class="line">      <span class="keyword">let</span> total = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item.<span class="property">num</span>, <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> total</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color=#FF9911>实际执行后，控制台只会打印一次，说明只调用了一次。</font></p><p><font color=#DB7093>而如果用method方法的话。</font></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    totalCountFn () &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;methods方法执行了&#x27;</span>)</span><br><span class="line">        <span class="keyword">let</span> total = <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item.<span class="property">num</span>, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的礼物清单🛒<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; totalCountFn() &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.num &#125;&#125;个<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>礼物总数：&#123;&#123; totalCountFn() &#125;&#125; 个<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>这里控制台就会打印五次，说明调用了五次！</font></p><p><font color=#DA70D6>这就体现了计算属性的缓存特性带来的好处了。</font></p><h3 id="3-计算属性完整写法">3.计算属性完整写法</h3><p><font color=1E90FF>思考一个问题。既然计算属性也是属性，能被访问，那是不是也能被修改呢？</font></p><h3 id="（案例）综合小案例-成绩案例">（案例）综合小案例-成绩案例</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【Vue】01-快速入门与Vue指令</title>
      <link href="/2023/11/23/%E3%80%90Vue%E3%80%9101-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E4%B8%8EVue%E6%8C%87%E4%BB%A4/"/>
      <url>/2023/11/23/%E3%80%90Vue%E3%80%9101-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E4%B8%8EVue%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Vue快速上手">一、Vue快速上手</h2><h3 id="（一）Vue是什么">（一）Vue是什么</h3><p><font color=#00C957>Vue 是一个用于 <strong>构建用户界面</strong> 的 <strong>渐进式</strong> <strong>框架</strong>。</font></p><p><strong>构建用户界面：</strong></p><p>就是基于数据渲染出用户看到的页面。</p><p><strong>渐进式：</strong></p><p>渐进就是循序渐进。Vue东西很多(看下图)，一次性全学完很困难，但是Vue可以学一点用一点。</p><img src="https://s2.loli.net/2023/11/23/H8FVtK4JoRrmW9P.png" style="zoom: 33%;" ><p><strong>框架：</strong></p><p>框架就意味着是一套完整的项目解决方案，可以大大提升开发效率。</p><h3 id="（二）创建实例">（二）创建实例</h3><p><font color=1E90FF><em>这章就是教你一下怎么使用Vue。注意，这里演示的是Vue2。</em></font></p><blockquote><p>创建 Vue 实例，初始化渲染的核心步骤：<br>1.准备容器<br>2.引包 (官网) - 开发版本 / 生产版本<br>3.创建 Vue 实例 new Vue()<br>4.指定配置项 el data =&gt; 渲染数据<br>① el 指定挂载点，选择器指定控制的是哪个盒子<br>② data 提供数据</p></blockquote><p>看一下具体的代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 这里将来会编写一些用于渲染的代码逻辑 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 引入的是开发版本包 - 包含完整的注释和警告 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 一旦引入 VueJS核心包，在全局环境，就有了 Vue 构造函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 通过 el 配置选择器，指定 Vue 管理的是哪个盒子</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 通过 data 提供数据</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">msg</span>: <span class="string">&#x27;Hello 传智播客&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">count</span>: <span class="number">666</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="（三）插值表达式">（三）插值表达式</h3><p><font color=1E90FF>刚刚已经演示了一下通过Vue创建一个实例，并完成初始化渲染。我们进一步看一下里面的细节。</font></p><p><font color=#00C957>我们用了一个这种语法，这个其实就叫<strong>插值表达式</strong>，是Vue里的一种模板语法。</font></p><img src="https://s2.loli.net/2023/11/23/yFKpkIGqYPzONf5.png"><p><font color=#FF9911>比方说下面代码，里面都是表达式，就都可以读取出来：</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; nickname &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; nickname.toUpperCase() &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; nickname + &#x27;你好&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; age &gt;= 18 ? &#x27;成年&#x27; : &#x27;未成年&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; friend.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; friend.desc &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="comment">&lt;!-- 这三种是会报错的，看PPT里写的！ --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;p&gt;&#123;&#123; hobby &#125;&#125;&lt;/p&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;p&gt;&#123;&#123; if &#125;&#125;&lt;/p&gt; --&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;p title=&quot;&#123;&#123; nickname &#125;&#125;&quot;&gt;我是p标签&lt;/p&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">nickname</span>: <span class="string">&#x27;tony&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">age</span>: <span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">friend</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">name</span>: <span class="string">&#x27;jepson&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">desc</span>: <span class="string">&#x27;热爱学习 Vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="（四）响应式特性">（四）响应式特性</h3><p><font color=#DB7093>响应式是Vue的一个核心特性，意思是<strong>数据变化，视图自动更新</strong>。</font></p><img src="https://s2.loli.net/2023/11/23/fTdLg58x3tpCGuS.png" style="zoom: 25%;" ><p><font color=#FF9911>像图里这样，用这种方式访问data里的数据，在控制台进行修改，视图也会跟着自动变化！（底层把DOM操作封装起来了）</font></p><p><font color=#FF9911>以后我们可能就是用按钮、表单这些修改数据，表现效果上都是让视图自动变化。</font></p><p><font color=#DA70D6>聚焦于数据 → 数据驱动视图，其好处在于：</font></p><p><font color=#DA70D6>使用 Vue 开发，关注业务的核心逻辑，根据业务修改数据即可。（就是只需要关注数据就可以了！）</font></p><h3 id="（五）开发者工具">（五）开发者工具</h3><p><font color=1E90FF>刚刚我们明确了Vue的响应式特性，知道只要关注修改数据就行了。但是刚刚我们是在控制台里进行的，有没有更方便的方式进行调试呢？</font></p><img src="https://s2.loli.net/2023/11/23/xqy3zrjPAOF75VD.png" style="zoom: 33%;" ><img src="https://s2.loli.net/2023/11/23/9it4eHlDSKCLOYJ.png" style="zoom:33%;" ><p><font color=#DA70D6>注意下这个Vue栏只有在Vue的界面里才能用哦，正常是看不到的。</font></p><h2 id="二、Vue指令">二、Vue指令</h2><p>Vue 会根据不同的【指令】，针对标签实现不同的【功能】</p><p><font color=#00C957>指令：带有 v- 前缀 的 特殊 标签属性。</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Vue指令: 带有v-前缀的特殊标签属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;msg&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 普通标签属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DA70D6>可以在官网的文档里找到，总共有14个这样的指令。接下来让我们慢慢学习。</font></p><h3 id="（一）v-html">（一）v-html</h3><p><font color=1E90FF>这里利用了v-html来演示，那就先了解一下这个。</font></p><blockquote><p>v-html:<br><strong>作用：</strong> 设置元素的 innerHTML<br><strong>语法：</strong> v-html = &quot;表达式 &quot;</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">msg</span>: <span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">          &lt;h3&gt;学前端~来黑马！&lt;/h3&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">        `</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="（二）v-show和v-if">（二）v-show和v-if</h3><img src="https://s2.loli.net/2023/11/23/uBLEM86vlXzwjV7.png" style="zoom: 33%;" ><p>两者表现效果是一样的，但是原理不一样。看PPT，前者只是单纯用css来隐藏，后者则是创建或移除这个节点了。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    v-show底层原理：切换 css 的 display: none 来控制显示隐藏</span></span><br><span class="line"><span class="comment">    v-if  底层原理：根据 判断条件 控制元素的 创建 和 移除（条件渲染）</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是v-show控制的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>我是v-if控制的盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">flag</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果为了图方便，统一全使用v-show这种，会导致整个页面存在着大量冗余的结构，会在页面加载时造成不必要的开销。所以需要根据具体情况进行权衡。</p><h3 id="（三）v-else和v-else-if">（三）v-else和v-else-if</h3><img src="https://s2.loli.net/2023/11/23/NZnldJf4mxkKT7F.png" style="zoom:33%;" ><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;gender === 1&quot;</span>&gt;</span>性别：♂ 男<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>性别：♀ 女<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;score &gt;= 90&quot;</span>&gt;</span>成绩评定A：奖励电脑一台<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score &gt;= 70&quot;</span>&gt;</span>成绩评定B：奖励周末郊游<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;score &gt;= 60&quot;</span>&gt;</span>成绩评定C：奖励零食礼包<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>成绩评定D：惩罚一周不能玩手机<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">gender</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">score</span>: <span class="number">95</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DA70D6>就和其它编程语言里的if语句是一样的。</font></p><p><font color=#DA70D6><em>说实话长得好丑.jpg</em></font></p><h3 id="（四）v-on">（四）v-on</h3><p>这是事件绑定指令。</p><p>使用Vue时，如需为DOM注册事件，就可以使用v-on指令。对其基本的认识如下：</p><img src="https://s2.loli.net/2023/11/23/arVCW5H3sLw9Ipq.png" style="zoom:33%;" ><p><font color=1E90FF>我们首先介绍一下内联语句的写法。</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count--&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; count &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">count</span>: <span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#FF9911>这个很显而易见，点击两边的按钮可以让中间的数字改变。</font></p><p><font color=1E90FF>内联语句虽然方便，但只适用于逻辑简单的场景。一旦逻辑复杂了，代码量多了，那就需要用到对应的函数了。让我们再看看使用method函数的写法。</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn&quot;</span>&gt;</span>切换显示隐藏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span>&gt;</span>黑马程序员<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app4 = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">isShow</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        fn () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 让提供的所有methods中的函数，this都指向当前实例</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(&#x27;执行了fn&#x27;, app.isShow)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(app3 === this)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">isShow</span> = !<span class="variable language_">this</span>.<span class="property">isShow</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DA70D6>需要注意的就是，在函数中是没办法直接访问data中的数据的，所以需要通过实例（this）来进行访问。而内联语句中由于用的是模板，所以Vue能够自动识别 isShow 是该实例的一个属性，就不需要显式使用this了。</font></p><p><font color=#FF9911>除此之外，v-on绑定函数还可以进行参数传递。</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑自动售货机<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;buy(5)&quot;</span>&gt;</span>可乐5元<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;buy(10)&quot;</span>&gt;</span>咖啡10元<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;buy(8)&quot;</span>&gt;</span>牛奶8元<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>银行卡余额：&#123;&#123; money &#125;&#125;元<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">money</span>: <span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        buy (price) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">money</span> -= price</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="（五）v-bind">（五）v-bind</h3><p>这是属性绑定指令。</p><img src="https://s2.loli.net/2023/11/23/gY7oazXfQUJdytq.png" style="zoom:33%;" ><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-bind:src   =&gt;   :src --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;imgUrl&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;msg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">imgUrl</span>: <span class="string">&#x27;./imgs/10-02.png&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">msg</span>: <span class="string">&#x27;hello 波仔&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DA70D6>实际工作中这些属性肯定都是后端给的，不是写死的。</font></p><h3 id="（案例）综合小案例-连环画">（案例）综合小案例-连环画</h3><p><strong>需求：</strong> 就是准备一堆图片，还有两个按钮，点击下一页就下一张，点击上一页就上一张，怎么实现呢？</p><p><strong>思路：</strong> v-bind标签动态修改src就行了。把图片全放到一个list里，用index表明下标，点击按钮时更改下标就可以了。</p><p><strong>代码如下：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;index &gt; 0&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;index--&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;list[index]&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;index &lt; list.length - 1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;index++&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">index</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;./imgs/11-00.gif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;./imgs/11-01.gif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;./imgs/11-02.gif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;./imgs/11-03.gif&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;./imgs/11-04.png&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&#x27;./imgs/11-05.png&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>注意一下这个v-show是为了到达第一张或者最后一张时，就得对按钮进行隐藏。</font></p><h3 id="（六）v-for">（六）v-for</h3><p>这是列表渲染指令。</p><p>Vue 提供了 v-for 列表渲染指令，用来辅助开发者基于一个数组来循环渲染一个列表结构。</p><p>v-for 指令需要使用 <code>(item, index) in arr</code> 形式的特殊语法，其中：</p><ul><li>item 是数组中的每一项</li><li>index 是每一项的索引，不需要可以省略</li><li>arr 是被遍历的数组</li></ul><p>此语法也可以遍历<strong>对象和数字</strong>。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑水果店<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in list&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; item &#125;&#125; - &#123;&#123; index &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123; item &#125;&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [<span class="string">&#x27;西瓜&#x27;</span>, <span class="string">&#x27;苹果&#x27;</span>, <span class="string">&#x27;鸭梨&#x27;</span>, <span class="string">&#x27;榴莲&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>里面那个item in list是简写的方法。</font></p><h3 id="（案例）综合小案例-小黑的书架">（案例）综合小案例-小黑的书架</h3><img src="https://s2.loli.net/2023/11/23/Kzk7Zgysnx9JVcB.png" style="zoom:33%;" ><p><strong>需求：</strong> 就是给了个列表，模拟书架，可以点删除把书架移掉。</p><p><strong>思路：</strong> 就用刚刚学的v-for进行列表渲染，把内容都放到list里再渲染就好了。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>小黑的书架<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in booksList&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; item.author &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注册点击事件 →  通过 id 进行删除数组中的 对应项 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;del(item.id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">booksList</span>: [</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;《红楼梦》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;曹雪芹&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;《西游记》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;吴承恩&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;《水浒传》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;施耐庵&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">          &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">name</span>: <span class="string">&#x27;《三国演义》&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;罗贯中&#x27;</span> &#125;</span></span><br><span class="line"><span class="language-javascript">        ]</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        del (id) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 通过 id 进行删除数组中的 对应项 → filter(不会改变原数组)</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// filter: 根据条件，保留满足条件的对应项，得到一个新数组。</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// console.log(this.booksList.filter(item =&gt; item.id !== id))</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">booksList</span> = <span class="variable language_">this</span>.<span class="property">booksList</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">id</span> !== id)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=#DB7093>重点：这里注意一下这个v-for 中的 key。</font></p><p><font color=#DB7093>其作用是给元素添加的唯一标识。</font></p><blockquote><p><code>key</code> 是在使用 <code>v-for</code> 指令时提供的一个特殊属性，用于帮助Vue识别每个列表项的唯一性，以便更高效地更新虚拟DOM。当 Vue 更新由 <code>v-for</code> 渲染的元素列表时，它会尽量以最小的开销更新DOM。<code>key</code> 的主要作用是帮助Vue识别列表中每个项的身份，以便在重新渲染时更准确地追踪每个项的变化。</p><p>在使用 <code>v-for</code> 进行列表渲染时，每个渲染的元素都应该有一个唯一的 <code>key</code> 属性。这有助于Vue在进行 DOM 操作时，准确追踪每个元素的状态变化，从而提高渲染效率。</p></blockquote><p><font color=#DA70D6>不加的话在有的情况下会出现各种渲染上的问题，因为Vue会无法确定每个项的唯一性。</font></p><p><font color=#DA70D6>实际开发中一般就把这种id作为key。</font></p><h3 id="（七）v-model">（七）v-model</h3><p>这是双向绑定指令。</p><img src="https://s2.loli.net/2023/11/23/G2pNAUergcDq6LY.png" style="zoom:50%;" ><p><font color=#DB7093>这个指令以后会非常常用！它可以实现你在页面上输入什么，数据也自动变化成什么，同理数据变化视图也跟着变化，从而双向绑定！</font></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">      v-model 可以让数据和视图，形成双向数据绑定</span></span><br><span class="line"><span class="comment">      (1) 数据变化，视图自动更新</span></span><br><span class="line"><span class="comment">      (2) 视图变化，数据自动更新</span></span><br><span class="line"><span class="comment">      可以快速[获取]或[设置]表单元素的内容</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    账户：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">        login () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">username</span>, <span class="variable language_">this</span>.<span class="property">password</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        reset () &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">username</span> = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">password</span> = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年7月番完结观后感整理</title>
      <link href="/2023/10/06/%E3%80%90%E5%AE%8C%E7%BB%93%E8%A7%82%E5%90%8E%E6%84%9F%E3%80%912023%E5%B9%B47%E6%9C%88%E7%95%AA%E5%AE%8C%E7%BB%93%E8%A7%82%E5%90%8E%E6%84%9F%E6%95%B4%E7%90%86/"/>
      <url>/2023/10/06/%E3%80%90%E5%AE%8C%E7%BB%93%E8%A7%82%E5%90%8E%E6%84%9F%E3%80%912023%E5%B9%B47%E6%9C%88%E7%95%AA%E5%AE%8C%E7%BB%93%E8%A7%82%E5%90%8E%E6%84%9F%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="《BanG-Dream-It’s-MyGO-》">《BanG Dream! It’s MyGO!!!》</h3><img src="https://s2.loli.net/2023/10/06/hTAWnKUkGw4gCJ1.jpg"><p><strong>评分：8.3/10</strong></p><p>完整的长评见此：</p><p><a href="https://www.bilibili.com/read/cv26625498/">迷路中相遇的我们，将在迷茫中前进 —— 《BanG Dream! It’s MyGO!!!》观后感 - 哔哩哔哩 (bilibili.com)</a></p><p>在这个季度追番下来的动画观众，一定不会对MyGO感到陌生。这部作品过于特殊，它的追番过程中由于包含了大量场外因素，带来的体验是独一无二的；对于想要补番的观众，实际上补番过程未必会有相同的体验，但即使只论作品本身，也已然足够优秀，足以让我推荐去观看了。</p><p>MyGO不同于传统的乐队番，其表达并非是在传统的“友情”“梦想”的命题下，将人物景观式地展开，而是真正聚焦于角色处境，深入挖掘其内心历程。在追番过程中，故事中迷路的孩子们相遇所产生的化学反应，复杂的人际关系下一次又一次分崩离析的压抑，以及这究极的压抑释放后的畅快，都给笔者带来了巨大的感动。无论是一波三折峰回路转的剧情，各个人物在激烈矛盾中的挣扎与弧光呈现，还是几度神级的演出与酣畅淋漓的情感爆发，都使得笔者久久难以忘怀。 MyGO 中的各个角色复杂而又立体，每一位都有着自己独特的人格魅力。美中不足的是作为商业企划，结尾商业性的分割使得观感上产生了些许的不连贯，这是个尚未结束的故事，笔者对于下一部已宣布制作的作品满怀期待，希望能为故事画上圆满的句号。</p><p>**推荐程度：**强烈推荐。</p><h3 id="《不死少女-杀人笑剧》">《不死少女 杀人笑剧》</h3><img src="https://s2.loli.net/2023/10/06/AFOwIyqBnPs5SZE.png"><p><strong>评分：7.5/10</strong></p><p>奇幻风格下的故事，在吸血鬼、人造人、狼人等怪异背景下上演的侦探闹剧。</p><p>于笔者而言，本作首先吸引我的便是整体的氛围。EP1以大量文戏交代奇幻的故事背景，其中文戏演出尤其精妙，通过巧妙构思的分镜与各色多彩的风格，使得大量高密度的信息台词并不显得乏味枯燥，相反十分有趣，这种演出也奠定了故事诡谲的基调与风格，这于笔者而言已具有足够的吸引力。</p><p>故事上整体分为了三个案件，第一个案件是较为传统的本格推理，整体讲了一个还算不粗哦对故事；第二个案件则极大弱化推理，一转fate式的乱斗风格，以18世纪的欧洲为背景，在维多利亚风情的建筑风格下展现性格各异的名人角色的乱斗，颇有圣杯战争欧洲分杯的味道，观感上还是看着挺过瘾的；第三个案件则似乎资源不足等原因，质量上有断崖式下滑的态势，推理与乱斗元素都存在但都未深入，导致最终两边都没做好，细节上许多地方也未经打磨经不起推敲，这是笔者感到较为遗憾的地方。</p><p>**推荐程度：**推荐观看，除去质量断崖下滑的第三篇，前两篇都算值得一看。</p><h3 id="《白圣女与黑牧师》">《白圣女与黑牧师》</h3><img src="https://s2.loli.net/2023/10/06/e5qzomHdbhKp4TR.png"><p><strong>评分：7.3/10</strong></p><p>可认为是萌系日常番，整体采用萌系画风，讲述的是迟钝男主黑牧师与可爱女主白圣女的日常故事。</p><p>观感极为舒适的作品，富有轻松惬意的氛围。虽然有着恋爱的标签，但实际上并未如恋爱作品一般进行细腻的情感描写；偶有相对沉重的议题，也暗含少量刀子，但都是点到为止，没进行任何深入，还是维持着日常的基调。整体来说还是比较清新放松，属于慢节奏治愈类型的萌系日常作品。值得一提的是，作为季度指定表情包供应商，漫画的表情包早已有名，出现动画后变成了彩色+动态，十分可爱。适合用于放松身心，笔者常在起床后与睡前观看一集，有着极佳的治愈效果。</p><p>**推荐程度：**对于萌系日常番受众，推荐。</p><h3 id="《LV1魔王与独居废勇者》">《LV1魔王与独居废勇者》</h3><img src="https://s2.loli.net/2023/10/06/6e1qxZ9zNbRd2lT.png"><p><strong>评分：7.1/10</strong></p><p>讲述勇者打败魔王十年后，变成萝莉复活的魔王与废柴勇者的搞笑故事。整体贯穿着搞笑的基调，前期以日常为主，后期也加入了主线。</p><p>日常部分搞笑元素不少，能够让笔者笑出声，整体质量也较为稳定，甚至部分画面制作上超出了笔者的预期，制作相对精良；后期一转正经主线，讲述打败魔王后走上不同道路的原勇者小队，因如今身份立场不同而产生的冲突故事，然而实际上整体较为浮于表面，对于勇者与魔王这一议题的解构也并未深入挖掘，整体故事还是较为普通的；但实际上总体的剧情逻辑性没有大问题，相反其实相当契合原勇者小队全新的身份与形象，时代变迁下原先亲密无间的勇者小队，如今各自的生活已全然不同，这种场景还是相当令人感慨的。整体来说，是看得比较开心的一部作品。</p><p>**推荐程度：**较为推荐。</p><h3 id="《间谍教室-第二季》">《间谍教室 第二季》</h3><img src="https://s2.loli.net/2023/10/06/MDrhdTKCFE4pNPv.jpg"><p><strong>评分：6.5/10</strong></p><p>同名的续作，声豚狂喜篇。总体仍是分为两部分，主线回是演间谍戏，正经讲故事，日常回则通过展现主角们的互动塑造人物，较为轻松。</p><p>看过第一季的观众，对于这部作品应当有了一定的认知：主线故事没有什么水平，间谍水平甚至不如间谍过家家，无法抱着希望看到精彩故事的期望；日常回则回归轻松的基调，展现少女们的日常，观感相比主线有所上升。第二季延续了这一基调，但值得一提的是，本季的两个篇章相比第一季有明显提升（注意，只是相对第一季）：忘我篇的主线剧情是目前动画化部分最为精彩的，最终的反转超出了笔者的预期，体现出了一定水平；梦语篇则是体现在制作方面，例如过去与现在时间线的交织，黑白与彩色分镜的渲染，音乐的适时插入调动气氛，真相揭露的情感爆发等，在制作方面已经算是比较优秀的了，唯一的缺点是剧本过于抽象，匹配不上这种制作。</p><p>**推荐程度：**第一季看得舒服的观众可以在第二季获得同样良好的观看体验，甚至有所提升；对声豚强烈推荐，其余观众可选择观看。</p><h3 id="《莱莎的炼金工房-～常暗女王与秘密藏身处～》">《莱莎的炼金工房 ～常暗女王与秘密藏身处～》</h3><img src="https://s2.loli.net/2023/10/06/VqisRhQaY2MfTrb.png"><p><strong>评分：6.4/10</strong></p><p>同名游戏改编作品，讲述普通的农家少女莱莎成为炼金术士的冒险故事。</p><p>作为纯动画党，原先期望的实际上是跟着莱莎满世界跑探索未知的样子，但实际上的内容与其说是充满奇幻色彩的冒险故事，更像是悠闲的农村氛围日常。整体剧情都较为日常平淡，算是比较轻松惬意的故事，莱莎是属于比较有男孩子气的元气类型，对于未知世界充满着好奇心和探索的热情，笔者十分喜欢这种性格；画面制作方面略有匮乏，但没有太大崩坏，观感整体还算是舒适。适合下饭使用。</p><p>**推荐程度：**粉丝向作品，粉丝可观看，其余观众可选择观看。</p><h3 id="《转生成自动贩卖机的我今天也在迷宫徘徊》">《转生成自动贩卖机的我今天也在迷宫徘徊》</h3><img src="https://s2.loli.net/2023/10/06/PgswVZhaEnkWX37.png"><p><strong>评分：6.1/10</strong></p><p>稍有特色的异世界厕纸。讲述的是穿越到异世界变为自动贩售机的故事，虽有许多战斗回但整体氛围还是富有日常感。</p><p>在期望管理为厕纸的基础上，本作的亮点源于其设定：男主可变为不同的贩售机，形态多样，但身为非人类无法正常进行交流。这使得一方面，男主异常多的贩售机形态可以带来不同脑洞的奇妙玩法，较为有趣，且经笔者查询这皆为世界上真实存在的贩售机，可以在某种意义上当成贩售机科普；另一方面男主身为异类，与其它人进行的互动的方式与传统龙傲天也并不相同，这种互动本身也存在看点。人物方面，女主的人设较为元气可爱，且CV为本渡枫，对于笔者而言是有吸引力的。</p><p>**推荐程度：**整体未脱离厕纸的水平，但在厕纸中属于比较有趣的作品，可选择观看。</p><h3 id="《其实，我乃最强？》">《其实，我乃最强？》</h3><img src="https://s2.loli.net/2023/10/06/6ijSEv3LGOneNgK.jpg"><p><strong>评分：5.2/10</strong></p><p>标准的异世界厕纸。讲述的是穿越+龙傲天的故事。</p><p>在期望管理为厕纸的基础上，本作的最大问题在于男主的人设：对家里蹲的异常执念导致其行为和思想都脱离常识，性格极度不讨喜。这样的避世主义导致原有爽文的特性也缺失，连最基本的装逼带来的爽快感都无法满足，对观感有着强烈的负面影响；除此之外本作画面制作上有些诡异，整体亮度太高有点过曝的感觉，视觉效果不佳。唯一的亮点在于妹妹的人设性格都较为可爱，相关的剧情明显比其它剧情更为有趣，且CV为种崎敦美，对于声豚来说会是不错的体验。</p><p>**推荐程度：**中等水准的厕纸，对妹妹角色感兴趣可尝试观看，对大部分观众不建议观看。</p><h3 id="《虽然1级但以固有技能却是最强的》">《虽然1级但以固有技能却是最强的》</h3><img src="https://s2.loli.net/2023/10/06/hFiEr7JxlTjqo15.png"><p><strong>评分：4.7/10</strong></p><p>很标准的异世界厕纸。讲述的是穿越+龙傲天的故事。</p><p>需要一提的是，笔者在期望管理为厕纸的基础上，对于厕纸的观感取决于两方面：一为剧情，厕纸的剧情可以无聊但绝不能难受；另一个为妹子，人物可以缺乏塑造但绝不能招致反感，起码也要在外表人设上有所亮点。本篇的世界观乍一看相比其它厕纸存在特色，但实际上根本经不起推敲；而扣分的主要点在于人物方面，剧中部分人物的性格并不讨喜，同时画面制作较为残念，起不到养眼作用的同时还会造成负面观看体验。</p><p>**推荐程度：**厕纸中的中下位，不建议观看。</p><p>PS：可以听一听本作OP，歌相当好听。</p>]]></content>
      
      
      <categories>
          
          <category> 番剧 </category>
          
          <category> 完结观后感 </category>
          
          <category> 2023年7月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迷路中相遇的我们，将在迷茫中前进 —— 《BanG Dream! It&#39;s MyGO!!!!!》观后感</title>
      <link href="/2023/09/20/%E3%80%90%E6%96%B0%E7%95%AA%E8%A7%82%E5%90%8E%E6%84%9F%E3%80%91%E8%BF%B7%E8%B7%AF%E4%B8%AD%E7%9B%B8%E9%81%87%E7%9A%84%E6%88%91%E4%BB%AC%EF%BC%8C%E5%B0%86%E5%9C%A8%E8%BF%B7%E8%8C%AB%E4%B8%AD%E5%89%8D%E8%BF%9B%20%E2%80%94%E2%80%94%20%E3%80%8ABanG%20Dream!%20It&#39;s%20MyGO!!!!!%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/"/>
      <url>/2023/09/20/%E3%80%90%E6%96%B0%E7%95%AA%E8%A7%82%E5%90%8E%E6%84%9F%E3%80%91%E8%BF%B7%E8%B7%AF%E4%B8%AD%E7%9B%B8%E9%81%87%E7%9A%84%E6%88%91%E4%BB%AC%EF%BC%8C%E5%B0%86%E5%9C%A8%E8%BF%B7%E8%8C%AB%E4%B8%AD%E5%89%8D%E8%BF%9B%20%E2%80%94%E2%80%94%20%E3%80%8ABanG%20Dream!%20It&#39;s%20MyGO!!!!!%E3%80%8B%E8%A7%82%E5%90%8E%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>历经数月的追番历程，MyGO 动画于前几日迎来了完结。迷路的孩子们相遇所产生的化学反应，复杂的人际关系下一次又一次分崩离析的压抑，以及这究极的压抑释放后的畅快，都给笔者带来了巨大的感动。无论是一波三折峰回路转的剧情，各个人物在激烈矛盾中的挣扎与弧光呈现，还是几度神级的演出与酣畅淋漓的情感爆发，都使得笔者久久难以忘怀。 MyGO 中的各个角色复杂而又立体，每一位都有着自己独特的人格魅力。本文自角色出发，希望聚焦于角色的生活处境，探讨角色的内心历程，从而挖掘角色的魅力，以此抒发笔者心中的情感。</p><h3 id="1-千早爱音：乐队中的“大天使”">1. 千早爱音：乐队中的“大天使”</h3><img src="https://s2.loli.net/2023/09/17/DR5oQ4Aqkr7Txiu.png"><center style="color:#C0C0C0;font-size:14px">EP12，爱音比心心镇楼</center><p>在社群中，爱音一直被观众称为“圣爱音”，笔者也深受爱音近乎“大天使”般形象的吸引。</p><p>纵观全剧，千早爱音的定位其实相当有趣 —— 她并非是 旧CRYCHIC 矛盾的亲历者，而在这样一个以 旧CRYCHIC 成员为核心的故事中，爱音无异于一个外乡人般的存在。也因此和“各怀鬼胎”的其他 MyGO 成员不同，爱音卷入这场风波的契机实在再简单不过 —— 想要通过办乐队的方式，来获得注意。虽说在日后爱音以“虚荣”一词自称这一心理，但在笔者看来，爱音这种希望通过表现自我获得他人尊重的表现，就类似于幼儿园得到老师小红花很高兴的心理，与青春期孩子的形象十分契合，反倒显得更有“真实感”。爱音在后续与众人的相处过程中，实际上丝毫不掩饰这样的心理，即使在面对气氛极其“沉重”的场景下，爱音仍如同小孩子般在乐队名、站位等方面疯狂整活（这种整活甚至持续到了最后），而有趣的是，这样的行为在表现效果上不但不会招致人的反感，反而给作品增添了几分笑料。</p><img src="https://s2.loli.net/2023/09/16/5wfbAgYuDUMS7ce.png" style="zoom: 33%;" ><center style="color:#C0C0C0;font-size:14px">EP04中，灯久违露出了笑容，而这份笑容正是来源于爱音的活跃</center><p><font color=1E90FF>不过在此处，也不免会让人产生这样一种担忧：这样一个各方面表现都显得有“超凡入圣”之嫌，与沉重格局显得格格不入的人物，是否容易沦为背景板或是万能的破局工具人一般的存在？</font></p><p><font color=#FF9911>幸运的是，爱音的刻画在这一点上，在我看来做得还是可以的。</font>纵观全剧，爱音内在困惑的爆发总共出现了三次 —— 一次为 EP05 中被立希一针见血指出一直在逃避后的逃跑，一次为 EP09 中得知自己是不被需要存在后的打击。而剩下的一次，则需要我们再往前看，便可以发现故事的开端某种意义上甚至是源于爱音内在困惑的第一次爆发 —— 英国留学经历的失败促使爱音回国转校，也成为了 MyGO 这一乐队组建的起源。</p><p><font color=#DB7093>仔细分析，我们不难发现，三次爆发的幕后都源于爱音的自尊心，而三次困惑的消解也折射出了爱音内心历程的转变，这一点也反映在了爱音的现实行动上：</font></p><ul><li><p><font color=1E90FF>第一次困惑是源于英国留学的失败经历。</font>留学失败的经历也许是爱音人生路上的第一次巨大挫折 —— 在初中作为学生会长闪耀的自己，到了英国却是同学和老师连名字都无法记住的存在。这次爆发以爱音的回国结束，爱音第一次认识到了自己的软弱和有限的能力，但选择了逃避；</p></li><li><p><font color=1E90FF>第二次困惑是源于第一次困惑下的逃避，爱音回国后致力于组建乐团，但始终没有认真对待。</font>与第一次的性质不同，第一次的逃避源于爱音对于自己能力的错误预估，第二次则是源于经历第一次失败后的缺乏自信。此次爆发以灯向爱音传递心声，让爱音面对缺乏自信的自我为结束，推动爱音迈出了敢于尝试的一步。<br>也许有人会指责爱音的矛盾就这样简单结束，颇有“重重拿起轻轻放下”之嫌。实际上笔者看来，此次困惑的解决只是让爱音敢于面对自己的迷茫 —— 这种迷茫自英国留学失败起始，并非完全消解爱音的缺陷。实际上，爱音的其余可能被认为是负面的特质，例如过度的表现欲等，并未经过这一次便消除，而是从始至终一直存在的。也许有过度解读之嫌，但笔者认为爱音并未在失败后便陷入一蹶不振（<em>笔者在现实中见过一些因一次失败而彻底放弃之人，因此认为爱音平日的行动就是一种积极的象征</em>），在转学过后积极寻找自己的社交圈，即使态度显得轻浮也在尝试创办乐队。爱音其实一直知道问题的答案，在 EP01 中她在得知灯曾经组建乐队失败后就说过，“就算失败一次也要有重新再来的勇气，不然人生那么长怎么过得下去”。她内心深处也许是想在新的尝试中认清自我，只是暂时缺少一个契机。灯并非说教类的人物，传递的只是同样的“迷茫”，但这份传递对爱音来说已经足够了。</p><p>最为精妙的是，作者并未使爱音在困惑解除后，便成为“超凡入圣”的解脱者，这也使得第三次困惑诞生；</p></li><li><p><font color=1E90FF>第三次困惑是源于素世未将自己视为乐队一员的现实。</font>感受到被排除在外的爱音，在错愕之余给灯抛出了难题 —— 是选择素世，还是选择爱音？这种近乎电车难题的提问，灯自然无法作出回答。此次爆发以天台上爱音承认了内心的虚荣为结束。<br>在笔者看来，这一次困惑与第二次极其相似 —— 第二次爱音直面的是自身能力的缺失，而这一次爱音直面的是自己并非世界中心的事实。<font color=#FF9911>也因此，这一次困惑其实早在第二次便已经解决，第二次中爱音已经有了面对迷茫的勇气，这一次只是迷茫对象的不同。</font><font color=#DB7093>正是因为早以认清这样的事实，爱音后续也并未对灯，甚至并未对在这次事件中最过分的素世进行苛责，而是在天台上再一次承认自己的迷茫。回避灯的行为在我看来只是一种赌气 —— 当自己不被需要的事实赤裸裸地被揭露时，若是内心没有情绪的爆发，反倒显得太“超凡入圣了”。</font>这并非完全是笔者的臆想，而是体现在爱音的行为上的 —— 即使在回避后，爱音仍每日坚持练习吉他，这一方面是第二次困惑解决的体现（面对自己能力不足的现实），另一方面也是爱音仍有继续乐队的想法，才会如此。否则若是彻底切割，为何还需要练习本就没接触多久，连兴趣爱好都谈不上的吉他呢？这样的赌气符合青春期女生的心理，也正是因为仅仅是赌气，爱音后续才会如此快的就重新和解。<br>实际上这里，真正对不起爱音的就只有素世，爱音也知道这一点，所以她仍是把灯视为朋友的，因此对于灯这边，她的行为只能用“赌气”来解释。后续爱音回归后，她直面了乐队的现状和问题后，清楚乐队此时最大的问题是素世，便以极高的行动力去解决这一问题。<font color=#DA70D6>这一点正反应了爱音内心历程的转变，从轻浮的态度变为认真，爱音认真状态下极高的行动力也是吸引笔者的一大特性。</font><br>（这里写一点真正的臆想。爱音视角显然是不可能知道素世对祥子的惊鸿一跪，以及 CRYCHIC 彻底结束的事实的，她能知道的就只有素世在尝试重组 CRYCHIC。也因此爱音视角里，CRYCHIC 是有重组成功的可能性的。所以若是素世真的重组 CRYCHIC 成功了，爱音的性格可能是会真正献上祝福，然后重新寻找属于自己的乐队吧。圣爱音qwq）</p></li></ul><p>在三次困惑结束后，爱音彻底将乐队成员视为真心的朋友看待，无论是外号还是提议共同拍摄合照等行为，无不显示爱音已经将乐队视为了一个真的“命运共同体”。后续的整活行为（如乐队名为“ANON TOKYO”，以及脑补中自己永远站在C位的想法）已经完全变为了朋友之间调侃的玩笑话，爱音以自己的方式将乐队成员的关系变得紧密。<font color=#DA70D6>这样一个在关键时刻总能为团队付出，平日表现又如此活力可爱，近似“大天使”般的存在的少女，又怎能不让人喜爱呢？</font></p><img src="https://s2.loli.net/2023/09/17/DbQJtMXGaKfRjZv.png"><center style="color:#C0C0C0;font-size:14px">EP11，“ANON TOKYO”被拒绝后爱音的表情包，笔者看到这时真的被可爱到了</center><h3 id="2-高松灯：破茧成蝶，终于阳光下起舞">2. 高松灯：破茧成蝶，终于阳光下起舞</h3><img src="https://s2.loli.net/2023/09/18/jRobdamcgQ761Dh.png"><center style="color:#C0C0C0;font-size:14px">EP01，腼腆的高松灯镇楼</center><blockquote><p>“只有自己哭不出来，是为什么呢？是我太冷酷，还是作为人，缺少了什么呢？我没有像大家那样重要的事物。我想拥有重要的事物，让我像大家那样流泪。如果说有的话……那曾是CRYCHIC。”</p><p>—— EP03 高松灯的内心独白</p></blockquote><p><font color=1E90FF>高松灯的内在困惑是贯穿始终的：先天的共情障碍让她无法理解他人，在此基础上的不善言辞使得灯根本无法与他人进行交流，从而产生了强烈的自卑感，视自己为“怪物”般的存在。</font>长期如此的高松灯对着“归宿”有着极度强烈的渴求，她认为自己的异类是不合群的根源，因而不断发出“想成为人类”的呐喊。</p><p><font color=#FF9911>有趣的是，灯虽然以这样一种“弱者”的姿态存在，但她的内在困惑几乎全是源于内心自发的痛苦，并未受到过外在的恶意。</font>通过上帝视角我们不难发现，外界给予长期处于黑暗中的灯的，一直是关爱与保护 ——  年幼时即使送了虫子给朋友，朋友也愿意继续和灯玩，母亲给灯的也并非指责而是温暖的安慰；初中时期灯的同学会主动与灯打招呼，交流电视剧的话题，毕业典礼时也拉着灯一起哭泣、一起合照；高中时期灯更是被视为班上吉祥物般的存在（爱音最初也是因为这一点邀请的灯），只是认为灯更喜欢一个人独处而给予了她空间；CRYCHIC 时期有祥子和素世这样始终照顾着灯的存在，就更不必说了。</p><p>MyGO 的世界正是这样一个温柔的世界，只是可惜灯的共情障碍使她无法理解这样的温暖。<font color=#DB7093>相反的是，这样的温暖一度成为了缠绕于灯的隐形束缚。</font>长期被保护的现状使得灯虽倍感痛苦，但潜意识中她已经把这一处境视为了某种“理所当然”的存在 —— 因为我是“怪物”，我的不合群是注定的。CRYCHIC 的解散更是加固了灯的这一意识，她将所有的过错归咎于自己，认为正是因为她这种“怪物”的存在，才导致团队的离去。她认为身为异类的自己，无论做什么都只会失败，<font color=#DB7093>也因此主观上灯虽然有改变现状的想法，却始终缺乏突破这一道墙壁的勇气。</font></p><img src="https://s2.loli.net/2023/09/18/ktRMhOa7vPVlTHc.png"><img src="https://s2.loli.net/2023/09/18/NQkPwJKXBRIgYjy.png"><center style="color:#C0C0C0;font-size:14px">EP04，将解散的原因归咎于自己的灯</center><blockquote><p>拥抱过温暖阳光的春天 也将被盛夏的烈日燃尽</p><p>若终要枯于沥青路上 我宁愿永远躲在石头阴影下</p><p>—— EP10 高松灯在歌曲《诗超绊》中的朗诵部分</p></blockquote><p>而灯改变的契机来源于 EP01 中爱音的两句话 —— “就算失败一次也要有重新再来的勇气，不然人生那么长怎么过得下去”。其实放眼整个场景，这不过是再平常不过的两句话 —— 这并非说教式的场景，也没有使用特写等手法，只是爱音和灯聊天中偶然的两句话，以致于我猜测有些观众都忘却了这一细节。但就是这样两句话，给封闭灯内心的牢笼撕开了一道口子，让光线照了进来。<font color=#FF9911>这恰恰是笔者认为最有趣的地方 —— 人的改变有时候未必需要强烈的外力冲击，有时候那一点看似微不足道的小事就足以成为契机。</font>灯一直以来都是被他人保护的存在，他人对灯的安慰都是“这样的灯已经很棒了”之类的温柔语句，使灯封闭在了自己的圈内，她痛苦于现状，但却又担心自己尝试后会经历失败。<font color=#DA70D6>爱音给了灯这样一个方向，告诉了灯失败了也无所谓，这实际上是再简单不过的道理，但这就足以使灯迈出那一步了。</font></p><p>于是我们看到，当被立希指责的爱音跑走时，灯主动冲了上去，以复述爱音的话语将爱音拉回；当爱音因自己不被需要落寞离队后，灯站上了舞台念出自己的心声，在教室中对着爱音大声说出“我需要你”的重力语句；当素世想要结束乐队之际，灯主动站了出来，在观众的诧异中强硬地将素世拉上了舞台。灯的行动都显得笨拙，笨拙得可爱。没有长篇大论的说教，没有惊天动地的爆发，有的只是将自己的心声以最直白的方式表露，这也是灯独有的方式。<font color=#DA70D6>至此灯已经彻底作出了改变，突破束缚的她在追寻自己归宿的过程中，真正产生了要依靠自己守护这一归宿的信念 —— 谢谢大家在过去一直守护着我，这一次，就由我来反过来守护大家。</font></p><p>灯一直以来“想要成为人类”的呐喊，源于不合群带来的强烈孤独感，因而她将“成为人类”视为摆脱自己处境的方法论。但在她以自己的方式守护乐队的过程中，灯找寻到了自我存在的意义，强烈的孤独感也随之逐渐消散。因此我们看到在后期，灯不再执着于“变成人类”之类的目标，而是一遍又一遍呐喊着“自己不会再放手”的心声 —— 她不仅找到了自己物理上的归宿，更是在精神上找寻到了自己的存在价值。在这个过程中，灯逐渐承认了自己“迷路的孩子”的身份，她不再视自己为只能躲在黑暗角落，看着人类社会光芒的西瓜虫。灯与自己“怪物”的身份进行了和解，此时的她已然破茧成蝶，以在阳光下翩翩起舞的蝴蝶的全新姿态，以自己的方式与人类共处。<strong>一路下来，我们看到了灯在黑暗中的挣扎，破茧时的痛苦，也正是因为如此，化蝶的那一刻才会显得如此闪耀，如此令人感动。</strong></p><img src="https://s2.loli.net/2023/09/18/Pu6KeXvLEDkq7Yp.png"><center style="color:#C0C0C0;font-size:14px">OP《壱雫空》中，在雨后阳光下闪耀的灯</center><h3 id="3-长崎素世：追求名为“普通”的幸福">3. 长崎素世：追求名为“普通”的幸福</h3><p>长崎素世在很长一段时间，以如“妈妈”般照顾他人的温柔形象出现，对他人展现出无限的包容与善良，无论是在 CRYCHIC 还是 MyGO 乐队中都以团队关系维护者的身份存在。然而在“妈妈”形象的背后，我们也能窥见素世日常生活中工于心计的体现 —— 素世表面的和善似乎是另有所图。<font color=#FF9911>随着故事的推进，隐藏在素世背后的核心矛盾终于向我们揭开 —— 素世对于 CRYCHIC 有着极为强烈的执着，所做的一切都重组乐队为最终目的</font>。而当这样的愿望一次又一次受挫，并最终破灭之时，素世失去了长期行动下的内在动力，因而在万念俱灰之下不再掩饰自我。</p><img src="https://s2.loli.net/2023/09/18/bVQnqJSlHeCku4K.png"><center style="color:#C0C0C0;font-size:14px">EP08，发现自己被祥子拉黑后黑化的素世</center><p><font color=1E90FF>在这里，笔者曾一度陷入过惊讶：笔者原以为对 CRYCHIC 最为执着的，理应是灯；毕竟素世在 CRYCHIC 之外尚有自己的社交圈，而 CRYCHIC 却是灯唯一的归宿。</font>不过很快，EP09 便展示了素世如此行动的外在成因 —— 长期缺乏家人陪伴的现实造成了素世内心的孤独感，父母离异的家庭因素也使得她对于不安定的环境产生了恐惧。在此背景下，素世对于情感的渴求转化为了被依赖的欲望，向外则表现为向他人展示温柔以寻求接纳。素世在人际来往中长期以“被他人接纳”为最终目的，以此指导自己的行为，因而在不同场合下进行着不同的扮演。母亲工作如此辛苦，那么我理应作为“好女儿”给予母亲慰藉；同学有困难向我寻求，那么我理应作为“好同学”陪她一起；部员希望共同演奏，那么我理应作为“好部员”满足他们的要求。<font color=#FF9911>从这个角度说， CRYCHIC 可以说是素世在长期付出后的第一个回报，此前的扮演实际上带给素世的仍是空虚，而 CRYCHIC 是第一个真正给予素世“归宿感”的地方；CRYCHIC 对素世的意义并不亚于灯，也难怪素世在此后会拼尽一切，只为寻回 CRYCHIC 了。</font></p><p><font color=1E90FF>EP13中，素世对于灯的倾诉，也正表明了素世一路以来的生存方式，以及这样的生存方式下她暗藏的痛苦：</font></p><blockquote><p>我总是拼命想让周围的人接纳我，但是刻意去表现温柔，是不是一种伪善呢？<br>一开始想这些，我就难受得要死，我就故意不去想了。</p><p>—— EP13 长崎素世的倾诉</p></blockquote><img src="https://s2.loli.net/2023/09/18/4GNSCtoikcWIbhn.png"><center style="color:#C0C0C0;font-size:14px">EP09，寂寥的舞台衬托着素世孤独的身影</center><p>注意到此处，素世使用了“伪善”这个词。这让笔者感到十分有趣：在 EP09 播出之时，素世对祥子的惊鸿一跪以及面具的摘露曾一度引发部分观众对其指责，而其中较为极端的观点基于素世暗藏心机等负面特性存在的事实，指责素世的温柔善良等正面行为皆为虚假的产物，即一种“伪善”。而 EP13 中素世的倾诉，正是表明了她对这一现象的思考与迷茫：<font color=#DB7093>她选择了温柔待人的生存方式，这种方式为其带来了被依赖欲的满足，而同时由于自身也存在着工于心计的一面，对他人有时会从“如何利用”的角度看待，这一矛盾的心理使素世痛苦 —— 我对他人的温柔，到底是基于内心的真实想法，真正想要他人幸福，还是基于自己贪婪的欲望，只是为了自我满足呢？</font></p><p><font color=1E90FF>事实上笔者认为，这一想法实在是再正常不过的心理</font>，相信读者在生活中也会有下述的体会：我给予他人帮助，可以是受帮助他人的情感所驱使，这是一种无私，但我内心也可能暗暗期待着能够有所回报，这算是一种自私；自私和无私这两种看似矛盾的心理，是可以并存在一个人身上的 —— <font color=1E90FF>人就是这样一种复杂而又矛盾的存在</font>。素世并未认清这一点，因而陷入痛苦：她担心自己温柔的表现实质是丑恶的欲望化身，这种丑恶让她感到厌恶与恐惧。</p><p>在基于上述的认知后，我们再来重新审视素世的行为，<font color=#FF9911>不难发现素世即使后期摘下面具，嘴上说着“利用”等话语，内心却始终没有抛弃温柔。</font>当因演奏春日影一事与 MyGO 乐队成员彻底翻脸后，她对于随之找来的爱音并未拒绝沟通；惊鸿一跪换来的是祥子冰冷的言语，直到最后素世也不清楚祥子退团之谜，但后续的她仍然在尝试着理解祥子。而更进一步来说，素世痛苦于自己是否为“伪善”，这一想法本身就反应了她对于真善美的强烈追求。EP11 中，素世在与他人的相处中显得畏手畏脚，而立希敏锐注意到了这一点，点出了素世内心的阴影所在 —— 她愧疚于自己对他人的利用（尤其是爱音和乐奈），对于前面工于心计的行为，她终究也承载着负担。<font color=#DA70D6>这根本就不是什么伪善，种种表现都反应了素世的真实内心，即使她本人并无意识，但人内心深处的善良是藏不住的。</font></p><blockquote><p>PS：此处可以用《欢迎来到实力至上主义教室》中的角色栉田桔梗来进行对比（没看过的读者可略过此段）。栉田桔梗在表面上同样是温柔与善良的存在，但她的内心对这一行为认知是十分清晰的 —— 她的行为完全是基于自我满足，没有任何想要帮助他人的情感驱使，她真实的情感甚至截然相反，是强烈厌恶和反感帮助他人的。正是因为有着清晰的认知，她才能毫不犹豫地在面具被摘下后通过对于他人的无节制攻击，企图打击他人的社会存在价值和精神，以此满足自己真实情感的宣泄。这样的角色较为极端，属于真正的“伪善”类角色。</p><p>长崎素世实质上与此类角色相差甚远。</p></blockquote><img src="https://s2.loli.net/2023/09/18/xCD6aiTjQJzIWbF.png"><center style="color:#C0C0C0;font-size:14px">EP11，看着灯、爱音与乐奈的身影，素世的神情更多的是一种愧疚</center><p>“我想，我一辈子也忘不掉 CRYCHIC”，这是素世在番剧中留下的最后一句话。回顾一路的历程，看着素世作为对 CRYCHIC 最后一名有所留恋的成员，几乎是在不可能的情况下以孤独的姿态做着挣扎，在其中对于自己种种可能伤害他人的行为感到迷茫与痛苦，但为了守护自己重要的事物而不得不顶着痛苦前进的身姿时，我们自然也将深刻理解这句话背后的分量。这份愿望的沉重，也意味着愿望破灭后的素世痛苦之深。也正是因为这样的痛苦，当最后素世摘下面具，以真实的自我坦然面对 MyGO 的伙伴们，尝试以普通人的身份与他人共处之时，这份美好才显得如此珍贵，如此令人触动。素世深知自己内心的缺陷，但不再选择逃避，而是如灯所说的，要“在迷茫中前进”。<strong>此时的素世不再是基于“被依赖欲”带来的满足，而是尝试探索真实的自我与他人的相处之道，从中追寻自我存在的价值 —— 我想，素世追寻的事物，也许就是那名为“普通”的幸福。</strong></p><img src="https://s2.loli.net/2023/09/19/VeIvuw9Jd1RXsA7.png"><center style="color:#C0C0C0;font-size:14px">EP11，看着熟睡的MyGO成员露出微笑的素世。</center><center style="color:#C0C0C0;font-size:14px">素世可以以真实的自我与成员共处，这让她感到轻松，也许，这就是名为“普通”的幸福</center><img src="https://s2.loli.net/2023/09/18/dVOSgQ8uqaiLRvY.png"><center style="color:#C0C0C0;font-size:14px">EP13，素世表明将直面自己的迷茫</center><h3 id="4-椎名立希：“劣等生”与自我接纳">4. 椎名立希：“劣等生”与自我接纳</h3><p>笔者对于椎名立希的定位一度感到疑惑。从表面上看，立希这一角色似乎过于安定了：她不像爱音有着独特的“天使”性格，也不是乐奈那样吉祥物般的特殊存在，更不像灯和素世动不动就整点大活。<font color=1E90FF>全剧似乎没有花费多少笔墨对其进行描写，让人不禁疑问：这样的角色是否太过于“路人”了？</font></p><p><font color=#FF9911>当然，立希也绝非如路人般毫无存在感，她也同样存在着明确的内在困惑：源于姐姐阴影之下的自卑感。</font>不难猜测，作为“被比较的孩子”，这种劣等感几乎伴随了立希全部的成长生涯。虽说“普通”实际上是大多数人的真实写照，然而立希要强的性格令其不甘于平庸，这一点体现在了她的行动上 —— 无论是在课业外积极打工赚钱，还是在新乐队组建之际主动承担乐队负责人的任务，亦或是挑战自己此前未接触过的编曲领域，无比显示立希不甘于现状，渴望提升自己的积极心理。然而在这个过程中，立希的“劣等感”始终贯穿全程， 强烈的自卑感使之常常对自己的行动产生质疑；于是在 EP06 中，这一困惑产生了强烈的爆发，对于自己严苛要求带来的内在压力与乐队混乱的外在环境，令其发出了“自己没法做到像祥子那样啊”那样的宣泄，一度陷入崩溃的境地。</p><img src="https://s2.loli.net/2023/09/19/43vmbjlwJ5dDCVx.png"><center style="color:#C0C0C0;font-size:14px">EP06，立希对自己能力不足的悲伤</center><p>这次爆发的结束以爱音与灯追到立希的学校，在近乎玩闹的追逐中使得立希心情好转结束。<font color=#DB7093>然笔者认为，这不过是在爱音和灯的好意下，一次短暂的缓解；立希埋藏于内心深处的”劣等感“是始终存在的。</font>只是随着乐队后续不断发展，主要矛盾逐渐转移到了他人身上，使得立希的存在感逐渐淡化；而随着其他矛盾的不断解决，乐队逐渐步入了正轨，这份”劣等感“也随之被隐藏了。</p><blockquote><p>我当初听到灯的歌声时，觉得那唱的就是我。无法用言语描述的心情，都被灯转化为了歌声，让我知道了，这样的自己也有资格活着。</p><p>—— EP05 椎名立希的倾诉</p></blockquote><p>让我们回过头去进一步审视立希的行为。立希在全剧中多次表达了对灯的温柔与保护，且不同于灯或是素世对于“归宿”这一共同体的追求，立希从始至终执着的只有灯，而这一点也在 EP10 中被素世一针见血地指出。从立希的倾诉中，我们似乎可以探见这份关注的成因：立希从灯的歌声中产生了强烈共鸣，认定自己与灯处于相似处境，从而将自己的影子投射在了灯的身上，而灯闪耀的身影令她看到了实现自我价值的可能性。立希的内心有着与灯同样的“孤独感”，即使身处人群之中也觉得自己不属于其中。<font color=#DA70D6>如果说灯是由于先天的共情障碍造就的不合群，那么立希就是来源于长期在姐姐阴影下劣等感造就的“自卑”；她将自己认定为是“失败作”的存在。这样的强烈自卑让她对自己的存在意义产生了质疑，也因此当她看到了灯的闪耀后，追寻到了某种人生价值，从而说出“这样的自己也有资格活着”的语句。</font></p><img src="https://s2.loli.net/2023/09/19/WpCZPRiNogaSvdj.png"><center style="color:#C0C0C0;font-size:14px">EP03，live成功后的立希直接抱住了灯，内心十分感动</center><p>到这里，立希迷茫状态的成因便呼之而出了 —— 这实质是难以接纳作为“普通人”的自己。<font color=1E90FF>在笔者看来，这实际上是一种具有普遍现象的心理，在日常生活中并不罕见。相信一些读者的人生经历中也会有像“别人家的孩子”之类的存在，而在竞争这一要素普遍存在的当下社会，与他人产生差距的现象也会频频发生；毕竟，大部分人都只是所谓的“普通人”。</font>立希也不过是万千大众中“普通”的一员，只是他人的闪耀让其难以忍受作为“普通人”的自己。这是普通人常见的心理，而动画到最后也并未对这一命题进行进一步阐释，她没有如同其他人有着“痛骨铭心”般的强烈冲击，因而使得立希显得有一丝“路人”感。</p><p>不过，像这样的议题本身就不存在所谓的最优解，也许一辈子都找不到所谓的“答案”，在漫长的人生历程中逐步与自己达成和解不失为一份美丽的答卷。<font color=#DB7093>到故事的结尾，MyGO 乐队已然步上了正轨，被立希所关注的灯已然接纳了不完全的自己，而立希也作为乐队的主导者带领着乐队在迷茫中前行；希望在这个过程中，立希能够逐渐与自己的“普通”达成和解，意识到这份普通也有闪耀的地方，找到自我存在的价值吧。</font></p><img src="https://s2.loli.net/2023/09/19/iVsun3l9F2TtwmX.png"><center style="color:#C0C0C0;font-size:14px">EP07，看到灯唱出声后欣喜的立希</center><h3 id="5-要乐奈：游离常识之外的“猫系”少女">5. 要乐奈：游离常识之外的“猫系”少女</h3><img src="https://s2.loli.net/2023/09/18/hzXbYtK15UReNVu.png"><center style="color:#C0C0C0;font-size:14px">EP04，微笑猫猫，"有趣的女人"</center><p>乐奈是笔者在剧中十分感兴趣的角色。无论是灯“想变成人类”的呐喊，立希对于“活着”意义的追寻，还是祥子与睦那边“人偶”意象的反复出现，众多角色内心的空洞似乎都共同指向对“成为人类”的追求。而乐奈在某种意义上与这一追求背道而驰。<font color=1E90FF>作为被众人称为“流浪猫”的存在，乐奈似乎始终游离于众人之外；她身上不具备人世中的常识，展现出的始终是一种“猫性”。</font></p><p><font color=#FF9911>与传统上通过外表上的猫耳等特征的标识，以及行为上通过卖萌等方式展现猫“可爱”等特性的角色不同，乐奈的“猫性”并非浮于表面，而是完全融于角色的特质之中。</font>一方面，猫是不具备人类的常识的，我们可以看到乐奈对于电子产品使用的无知，在舞台试音时的疑惑。猫猫的行为天然超脱于人类的常识，也因此队友试图以人类的思维去接触和理解乐奈的行为常常无功而返。另一方面，与会以直率热情的方式表达对人类喜爱的狗不同，猫天然便有着“不可捉摸”的特性，这一特性也决定了猫与人类独有的相处方式；也因此，我们会看到乐奈平日的行动往往神出鬼没，会在众人惊异眼神中混入并直接演奏音乐，感到无聊后便又自发离开。“猫性”的举动往往会打乱队友的节奏，使队友陷入困惑，但这并非意味着乐奈只顺从于内心不顾他人感受，缺少对他人的关爱；相反，乐奈实则重视着队友，在乐队一度分崩离析之时会主动前去帮助行动的灯，直率地将立希拉上舞台，在正式 live 之类的关键场合也从未掉过链子。毕竟猫猫与人的相处方式与人之间的相处方式并不相同，如此的行为正是“猫系”的乐奈情感表达的独有体现。</p><img src="https://s2.loli.net/2023/09/19/oz5FbDvltWxrpMf.png"><center style="color:#C0C0C0;font-size:14px">EP11，睡眼朦胧的猫猫</center><p>在 EP12 乐队正式成型后的第一个日常回中，向来话语甚少词不成句的乐奈极为少见的吐露了自己的背景：</p><blockquote><p>她以前经营的Live House，SPACE<br>我以为那里会一辈子都在<br>虽然现在没有了<br>不过 她说过总会有人再创造新的栖身之处的</p><p>—— EP12 要乐奈</p></blockquote><p>乐奈也曾有过作为家猫生活的时光，而 SPACE 的关闭令其成为了“流浪猫”。<font color=#DB7093>虽说在流浪生涯中乐奈并未展现出形单影只的空虚，但想必内心深处还是想要一个类似于“家”的归宿吧。也因此灯的“一生宣言”会触动乐奈，使之不由笑出声，认为乐奈是“有趣的女人”；“流浪猫”的本质也是“迷路的孩子”，对于安定的栖身之处同样有着渴求。幸运的是，MyGO 给了猫猫一个新的“家”。</font></p><img src="https://s2.loli.net/2023/09/19/6VF1mMUsrgpxwc8.png"><center style="color:#C0C0C0;font-size:14px">EP12，乐奈的奶奶来看乐奈的live</center><p>回顾前文，无论是自认“作为人类有所缺失”的灯，因劣等感而陷入自我质疑的立希，还是戴上面具寻求接纳的素世，他们都有着共同的特点：追寻“身为人类”的生存之道，寻求融入于人群的方式。而乐奈与上述角色，甚至于与整个动画的出场角色都不相同，<font color=#DA70D6>“猫系”的乐奈并不寻求“成为人类”而融入人群，更是真正作为某种“异质”的存在与人类共处。也因此，乐奈与他人的相处往往会展现出出人意料的效果。</font>这种效果使得笔者感到十分有趣，也正是这种独特的塑造所产生的魅力深深吸引了笔者。</p><h3 id="6-MyGO：在迷茫中前进">6. MyGO：在迷茫中前进</h3><p>与传统的音乐或偶像番不同， MyGO 的故事显得更为现实。MyGO 乐队并非如传统的乐队，至少对于笔者而言，并未感受到队员之间有着“永不分离”般的强烈羁绊，也没有“非这几个人不可”的执念，队员之间更没有所谓“共同的梦想”之类的目标来指导前行；甚至于在某种程度上，“组建乐队”这件事本身便已是一大终极目标。<font color=1E90FF>在故事的最后，曾发表“一生宣言”的灯也意识到，所谓的“一辈子组乐队”实在是过于理想主义，近似于一种妄想；即使不愿面对，也必须承认，现实并非是喊着“爱与梦想”一类的口号便可冲破一切的理想世界。</font></p><img src="https://s2.loli.net/2023/09/19/kWfXt1VMiyA9FuO.png"><center style="color:#C0C0C0;font-size:14px">EP11，灯的话语和歌词体现了她对“一生宣言”的重新思考</center><p>是的，MyGO 绝非一个理想化的世界，在经历了如此多的坎坷后，它仍要求我们面对现实；<font color=#FF9911>但，MyGO 的故事一定是一个浪漫的故事。</font>在故事的末尾，灯重新对自己的“一生宣言”进行了思考，并给出了自己的答案：</p><blockquote><p>Live仿佛只有短暂的一瞬间<br>但是当时的情感和光芒，是确实存在的<br>只要将无数个瞬间积攒起来<br>我想就能成为一辈子</p><p>—— EP13 高松灯在Live成功后的感悟</p></blockquote><p><font color=#DB7093><strong>是啊，也许所追求的事物是虚无缥缈的，但是这种信念是真实的；live 转瞬即逝，但是那个瞬间的光芒是将一直存在的，而所谓的一生，就是将这样一个个闪耀的瞬间积攒而成。没有什么过去的命中注定，也没有什么将来的永不分离，有的只是当下存在的瞬间、当下正在享受这个瞬间的我们，以及这个瞬间里的情感与闪耀的光芒。所以，即使那份理想只是美好的愿景，即使前路处于一片迷雾之中，我也要坚持自己的信念，积攒每一个瞬间；即使迷茫，也要前进。</strong></font>这是一个如此浪漫的答案，浪漫到让笔者难以用言语形容自己的感受 —— 我想，这也正是 MyGO 动画的魅力所在。</p><h3 id="后记">后记</h3><p>笔者自八月份开始加入 MyGO 这一作品的追番队伍中，期间也历经动画社群的讨论。在追番过程中，MyGO 给我带来了太多惊喜，社群的各种讨论也是令笔者乐趣无穷。MyGO 动画给我带来的追番体验是难忘的，相信即使是十年二十年过后回忆，这部动画也仍会在我心中留有极大分量。</p><p>正是这种难忘的体验，驱使着笔者写下这篇文章。实际上，笔者的文字功底等较为薄弱，各方面的综合能力与素养也存在不足，这是笔者第一次写下万字以上的长评。笔者向来是对动画极度宽容的人，对于 MyGO 动画又是抱着强烈的喜爱观看，因此这篇文章不免会带有许多主观滤镜与色彩，可能会融入一些被他人认为是过度解读甚至于臆想的内容，同时文章的内容可能也比较发散，还请各位读者以批判的眼光看待，不足之处请多多指点。</p>]]></content>
      
      
      <categories>
          
          <category> 番剧 </category>
          
          <category> 长篇观后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
